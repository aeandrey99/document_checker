#!/usr/bin/env python
# -*- coding: utf-8 -*-
import tkinter as tk
from tkinter import ttk
import datetime
from ...theme import FONT_SMALL_ITALIC, TEXT_HINT
from .tooltips import create_tooltip
from .utils import UIUtils

class PanelsBuilder:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—â–∏—Ö –ø–∞–Ω–µ–ª–µ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    """
    def __init__(self, app_instance):
        self.app = app_instance
        self.status_var = tk.StringVar()
        self.utils = UIUtils()

    def create_top_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –≤–µ—Ä—Ö–Ω—é—é –ø–∞–Ω–µ–ª—å —Å –≤—ã–±–æ—Ä–æ–º –ø—É—Ç–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—É—Å–∫–∞"""
        top_frame = ttk.Frame(self.app.root, padding="15")
        top_frame.pack(fill=tk.X)
        
        ttk.Label(top_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –∏–ª–∏ —Ñ–∞–π–ª:").pack(side=tk.LEFT, padx=(0, 10))
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–º–∫—É –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏ –æ–±–∑–æ—Ä–∞
        path_frame = ttk.Frame(top_frame)
        path_frame.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=(0, 15))
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏
        self.path_entry = ttk.Entry(path_frame, textvariable=self.app.selected_path, width=50)
        self.path_entry.pack(side=tk.LEFT, fill=tk.X, expand=True)
        
        create_tooltip(self.path_entry, "–ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –∏–ª–∏ —Ñ–∞–π–ª—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–∑–æ—Ä–∞ —Å –∏–∫–æ–Ω–∫–æ–π
        browse_button = ttk.Button(
            top_frame, 
            text="–û–±–∑–æ—Ä üóÇ", 
            command=self.app.browse_path
        )
        browse_button.pack(side=tk.LEFT, padx=(0, 15))
        
        create_tooltip(browse_button, "–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –∏–ª–∏ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π
        self.app.action_button = ttk.Button(
            top_frame, 
            text="–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É ‚ñ∂", 
            command=self.start_check_with_confirm
        )
        self.app.action_button.pack(side=tk.LEFT)
        
        create_tooltip(self.app.action_button, "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")

    def start_check_with_confirm(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –º–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã —Ä–µ—Å—É—Ä—Å–æ–µ–º–∫–∏–µ –æ–ø—Ü–∏–∏
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –≤—ã–±—Ä–∞–Ω–æ
        file_count = self.app.get_file_count() if hasattr(self.app, 'get_file_count') else 0
        value_search_enabled = self.app.enable_value_search.get() if hasattr(self.app, 'enable_value_search') else False
        
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –º–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –≤–∫–ª—é—á–µ–Ω –ø–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π
        if file_count > 20 or value_search_enabled:
            message = ""
            if file_count > 20:
                message += f"–í—ã–±—Ä–∞–Ω–æ {file_count} —Ñ–∞–π–ª–æ–≤. "
            if value_search_enabled:
                message += "–í–∫–ª—é—á–µ–Ω –ø–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π, —á—Ç–æ –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É. "
            message += "–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É?"
            
            if UIUtils.ask_confirm("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", message):
                self.app.start_check()
        else:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ–º–Ω–æ–≥–æ –∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω—ã —Ä–µ—Å—É—Ä—Å–æ–µ–º–∫–∏–µ –æ–ø—Ü–∏–∏, –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            self.app.start_check()

    def create_bottom_info_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ –∏ –¥–∞—Ç–æ–π"""
        bottom_info_frame = ttk.Frame(self.app.root, padding="5", style="Info.TFrame")
        bottom_info_frame.pack(fill=tk.X, side=tk.BOTTOM)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –∏–∫–æ–Ω–∫—É –∫–æ–º–ø–∞–Ω–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        company_frame = ttk.Frame(bottom_info_frame)
        company_frame.pack(side=tk.LEFT, padx=10)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ
        ttk.Label(
            company_frame, 
            text="@–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ò–¢–†–ê", 
            font=FONT_SMALL_ITALIC, 
            foreground=TEXT_HINT
        ).pack(side=tk.LEFT)
        
        # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        self.datetime_label = ttk.Label(
            bottom_info_frame, 
            font=FONT_SMALL_ITALIC, 
            foreground=TEXT_HINT
        )
        self.datetime_label.pack(side=tk.RIGHT, padx=10)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.update_datetime()
        
    def update_datetime(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏"""
        current_datetime = datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S")
        self.datetime_label.config(text=f"–¢–µ–∫—É—â–∏–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {current_datetime}")
        
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        self.app.root.after(1000, self.update_datetime)
        
    def create_status_bar(self):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        """
        status_bar = ttk.Frame(self.app.root)
        status_bar.pack(fill=tk.X, side=tk.BOTTOM)  # Removed 'before' option
        
        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.status_label = ttk.Label(
            status_bar, 
            textvariable=self.status_var,
            foreground=TEXT_HINT,
            font=FONT_SMALL_ITALIC
        )
        self.status_label.pack(side=tk.LEFT, padx=10)
        
        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        self.file_counter_frame = ttk.Frame(status_bar)
        self.file_counter_frame.pack(side=tk.RIGHT, padx=10)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.set_status("–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –∏–ª–∏ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")
        
    def set_status(self, text):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        """
        self.status_var.set(text)