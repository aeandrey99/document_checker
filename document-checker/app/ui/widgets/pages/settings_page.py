#!/usr/bin/env python
# -*- coding: utf-8 -*-
import tkinter as tk
from tkinter import ttk
from ...theme import TEXT_HINT, FONT_SMALL_ITALIC
from ...widgets.common.tooltips import create_tooltip
from ...widgets.common.utils import UIUtils

class SettingsPageBuilder:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π
    """
    def __init__(self, app_instance):
        self.app = app_instance
        self.utils = UIUtils()

    def create_settings_page(self, parent_frame):
        """
        –°–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É—è –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
        """
        # –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫–Ω–æ—Ç —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
        self.notebook = ttk.Notebook(parent_frame)
        self.notebook.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        
        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        file_types_tab = ttk.Frame(self.notebook, padding=10)
        options_tab = ttk.Frame(self.notebook, padding=10)
        search_tab = ttk.Frame(self.notebook, padding=10)
        output_tab = ttk.Frame(self.notebook, padding=10)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç
        self.notebook.add(file_types_tab, text="–¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤ üìÑ")
        self.notebook.add(options_tab, text="–û–ø—Ü–∏–∏ ‚öô")
        self.notebook.add(search_tab, text="–ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π üîç")
        self.notebook.add(output_tab, text="–û—Ç—á—ë—Ç üìä")
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫
        self._create_file_types_tab(file_types_tab)
        self._create_options_tab(options_tab)
        self._create_search_values_tab(search_tab)
        self._create_output_tab(output_tab)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
        self.notebook.bind("<<NotebookTabChanged>>", self._on_tab_changed)

    def _create_file_types_tab(self, parent):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Å —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª–æ–≤
        """
        # –ë–ª–æ–∫ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ Word
        word_frame = ttk.LabelFrame(parent, text="–î–æ–∫—É–º–µ–Ω—Ç—ã Microsoft Word", padding=10)
        word_frame.pack(fill=tk.X, pady=5)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        info_label = ttk.Label(
            word_frame, 
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ Word –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:", 
            padding=(0, 0, 0, 5)
        )
        info_label.pack(anchor=tk.W)
        
        # –°–æ–∑–¥–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ Word
        word_checks_frame = ttk.Frame(word_frame)
        word_checks_frame.pack(fill=tk.X)
        
        # –î–æ–∫—É–º–µ–Ω—Ç—ã DOCX
        docx_check = ttk.Checkbutton(
            word_checks_frame, 
            text=".docx - –î–æ–∫—É–º–µ–Ω—Ç Word (Office Open XML)", 
            variable=self.app.check_docx
        )
        docx_check.pack(anchor=tk.W, pady=2)
        create_tooltip(docx_check, "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ Word (—Å 2007 –≥–æ–¥–∞)")
        
        # –î–æ–∫—É–º–µ–Ω—Ç—ã DOC
        doc_check = ttk.Checkbutton(
            word_checks_frame, 
            text=".doc - –î–æ–∫—É–º–µ–Ω—Ç Word (Legacy)", 
            variable=self.app.check_doc
        )
        doc_check.pack(anchor=tk.W, pady=2)
        create_tooltip(doc_check, "–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ Word (–¥–æ 2007 –≥–æ–¥–∞)")
        
        # –î–æ–∫—É–º–µ–Ω—Ç—ã DOCM
        docm_check = ttk.Checkbutton(
            word_checks_frame, 
            text=".docm - –î–æ–∫—É–º–µ–Ω—Ç Word —Å –º–∞–∫—Ä–æ—Å–∞–º–∏", 
            variable=self.app.check_docm
        )
        docm_check.pack(anchor=tk.W, pady=2)
        create_tooltip(docm_check, "–î–æ–∫—É–º–µ–Ω—Ç Word —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–∞–∫—Ä–æ—Å–æ–≤ VBA")
        
        # –ë–ª–æ–∫ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ Excel
        excel_frame = ttk.LabelFrame(parent, text="–¢–∞–±–ª–∏—Ü—ã Microsoft Excel", padding=10)
        excel_frame.pack(fill=tk.X, pady=10)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        info_label = ttk.Label(
            excel_frame, 
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã —Ç–∞–±–ª–∏—Ü Excel –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:", 
            padding=(0, 0, 0, 5)
        )
        info_label.pack(anchor=tk.W)
        
        # –°–æ–∑–¥–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ Excel
        excel_checks_frame = ttk.Frame(excel_frame)
        excel_checks_frame.pack(fill=tk.X)
        
        # –¢–∞–±–ª–∏—Ü—ã XLSX
        xlsx_check = ttk.Checkbutton(
            excel_checks_frame, 
            text=".xlsx - –¢–∞–±–ª–∏—Ü–∞ Excel (Office Open XML)", 
            variable=self.app.check_xlsx
        )
        xlsx_check.pack(anchor=tk.W, pady=2)
        create_tooltip(xlsx_check, "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–∞–±–ª–∏—Ü Excel (—Å 2007 –≥–æ–¥–∞)")
        
        # –¢–∞–±–ª–∏—Ü—ã XLS
        xls_check = ttk.Checkbutton(
            excel_checks_frame, 
            text=".xls - –¢–∞–±–ª–∏—Ü–∞ Excel (Legacy)", 
            variable=self.app.check_xls
        )
        xls_check.pack(anchor=tk.W, pady=2)
        create_tooltip(xls_check, "–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–∞–±–ª–∏—Ü Excel (–¥–æ 2007 –≥–æ–¥–∞)")
        
        # –¢–∞–±–ª–∏—Ü—ã XLSM
        xlsm_check = ttk.Checkbutton(
            excel_checks_frame, 
            text=".xlsm - –¢–∞–±–ª–∏—Ü–∞ Excel —Å –º–∞–∫—Ä–æ—Å–∞–º–∏", 
            variable=self.app.check_xlsm
        )
        xlsm_check.pack(anchor=tk.W, pady=2)
        create_tooltip(xlsm_check, "–¢–∞–±–ª–∏—Ü–∞ Excel —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–∞–∫—Ä–æ—Å–æ–≤ VBA")
        
    def _create_options_tab(self, parent):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
        """
        # –†–∞–º–∫–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        basic_options_frame = ttk.LabelFrame(parent, text="–ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", padding=10)
        basic_options_frame.pack(fill=tk.X, pady=5)
        
        # –û–ø—Ü–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
        skip_large_check = ttk.Checkbutton(
            basic_options_frame, 
            text="–ü—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ñ–∞–π–ª—ã –±–æ–ª–µ–µ 100 –ú–ë", 
            variable=self.app.skip_large_files
        )
        skip_large_check.pack(anchor=tk.W, pady=3)
        create_tooltip(skip_large_check, "–ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –º–æ–≥—É—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏. –≠—Ç–∞ –æ–ø—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Ö –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å.")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏
        threads_frame = ttk.Frame(basic_options_frame)
        threads_frame.pack(fill=tk.X, pady=5)
        
        ttk.Label(threads_frame, text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤:").pack(side=tk.LEFT, padx=(0, 10))
        
        threads_spinbox = ttk.Spinbox(
            threads_frame, 
            from_=1, 
            to=32, 
            width=5, 
            textvariable=self.app.max_threads
        )
        threads_spinbox.pack(side=tk.LEFT)
        create_tooltip(threads_spinbox, "–ë–æ–ª—å—à–µ –ø–æ—Ç–æ–∫–æ–≤ –º–æ–∂–µ—Ç —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, –Ω–æ —É–≤–µ–ª–∏—á–∏—Ç –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ —Å–∏—Å—Ç–µ–º—É")
        
        # –†–∞–º–∫–∞ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        advanced_options_frame = ttk.LabelFrame(parent, text="–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", padding=10)
        advanced_options_frame.pack(fill=tk.X, pady=10)
        
        # –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å
        ttk.Label(
            advanced_options_frame,
            text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –≤ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö",
            font=FONT_SMALL_ITALIC,
            foreground=TEXT_HINT
        ).pack(pady=10)
        
    def _create_search_values_tab(self, parent):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
        """
        # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
        enable_frame = ttk.Frame(parent)
        enable_frame.pack(fill=tk.X, pady=5)
        
        enable_search = ttk.Checkbutton(
            enable_frame, 
            text="–í—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", 
            variable=self.app.enable_value_search
        )
        enable_search.pack(anchor=tk.W)
        create_tooltip(enable_search, "–í–∫–ª—é—á–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö")
        
        # –†–∞–º–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
        values_frame = ttk.LabelFrame(parent, text="–ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞", padding=10)
        values_frame.pack(fill=tk.BOTH, expand=True, pady=10)
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
        ttk.Label(
            values_frame, 
            text="–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–º –Ω–∏–∂–µ:"
        ).pack(anchor=tk.W, pady=(0, 5))
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–º–∫—É –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –∏ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞
        text_frame = ttk.Frame(values_frame)
        text_frame.pack(fill=tk.BOTH, expand=True)
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        scrollbar = ttk.Scrollbar(text_frame)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
        text_widget = tk.Text(
            text_frame, 
            height=5,
            wrap=tk.WORD,
            yscrollcommand=scrollbar.set
        )
        text_widget.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.config(command=text_widget.yview)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        def update_search_values(event=None):
            self.app.search_values.set(text_widget.get("1.0", tk.END).strip())
        
        text_widget.bind("<KeyRelease>", update_search_values)
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        if hasattr(self.app, 'search_values') and self.app.search_values.get():
            text_widget.insert("1.0", self.app.search_values.get())
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        info_frame = ttk.Frame(values_frame, style="Info.TFrame", padding=10)
        info_frame.pack(fill=tk.X, pady=10)
        
        instructions = (
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \"2024\", \"–ü—Ä–∏–≤–µ—Ç_\", \"–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ \"\n"
            "‚Ä¢ –ó–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç—ã–º–∏\n"
            "‚Ä¢ –ü—Ä–æ–±–µ–ª—ã –∏ –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –ø–æ–∏—Å–∫–µ\n"
            "‚Ä¢ –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —á–∞—Å—Ç–∏ —Å–ª–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è (_)"
        )
        
        ttk.Label(
            info_frame, 
            text=instructions,
            font=FONT_SMALL_ITALIC,
            foreground=TEXT_HINT,
            justify=tk.LEFT
        ).pack(anchor=tk.W)
        
    def _create_output_tab(self, parent):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤—ã–≤–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
        """
        # –†–∞–º–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏ –æ—Ç—á–µ—Ç–∞
        output_frame = ttk.LabelFrame(parent, text="–ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞", padding=10)
        output_frame.pack(fill=tk.X, pady=5)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Ç–∏ –∏ –∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
        path_frame = ttk.Frame(output_frame)
        path_frame.pack(fill=tk.X, pady=5)
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏
        output_entry = ttk.Entry(path_frame, textvariable=self.app.output_path, width=50)
        output_entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=(0, 10))
        create_tooltip(output_entry, "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ")
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏
        output_button = ttk.Button(
            path_frame, 
            text="–í—ã–±—Ä–∞—Ç—å üìÅ", 
            command=self.app.browse_output_path
        )
        output_button.pack(side=tk.LEFT)
        create_tooltip(output_button, "–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞")
        
        # –û–ø—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
        format_frame = ttk.LabelFrame(parent, text="–§–æ—Ä–º–∞—Ç –æ—Ç—á–µ—Ç–∞", padding=10)
        format_frame.pack(fill=tk.X, pady=10)
        
        # –û–ø—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –∏–º—è —Ñ–∞–π–ª–∞
        include_time_check = ttk.Checkbutton(
            format_frame, 
            text="–í–∫–ª—é—á–∞—Ç—å –≤—Ä–µ–º—è –≤ –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞", 
            variable=self.app.include_time_in_filename
        )
        include_time_check.pack(anchor=tk.W, pady=3)
        create_tooltip(include_time_check, "–î–æ–±–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞")
        
        # –î—Ä—É–≥–∏–µ –æ–ø—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å
        ttk.Label(
            format_frame,
            text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è –≤ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö",
            font=FONT_SMALL_ITALIC,
            foreground=TEXT_HINT
        ).pack(pady=10)
        
    def _on_tab_changed(self, event):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        """
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫
        tab_id = self.notebook.index("current")
        tab_text = self.notebook.tab(tab_id, "text")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if hasattr(self.app, 'set_status'):
            self.app.set_status(f"–í—ã–±—Ä–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {tab_text}")